{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "pfpostcallreference0sws0"
		},
		"InsightsDataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'InsightsDataLake'"
		},
		"pfpostcallreference0sws0-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'pfpostcallreference0sws0-WorkspaceDefaultSqlServer'"
		},
		"pfpostcallreference0sypasepool0_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'pfpostcallreference0sypasepool0'"
		},
		"InsightsDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pfpostcallreference0dl0.dfs.core.windows.net"
		},
		"pfpostcallreference0sws0-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pfpostcallreference0dl0.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/InsightsPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "InsightsDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "InsightsFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"InsightsSource": {},
									"InsightsSink": {},
									"TranscriptSink": {},
									"ReasonsSink": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "pfpostcallreference0sws0-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "pfpostcallreference0fs0"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Call Duration Notebook",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "InsightsDataFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "Call Duration Notebook",
								"type": "NotebookReference"
							},
							"snapshot": true
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-03T22:11:13Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/InsightsFlow')]",
				"[concat(variables('workspaceId'), '/linkedServices/pfpostcallreference0sws0-WorkspaceDefaultStorage')]",
				"[concat(variables('workspaceId'), '/notebooks/Call Duration Notebook')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/InsightsJson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InsightsDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "pfinsights"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Type": {
										"type": "string"
									},
									"DisplayText": {
										"type": "string"
									},
									"StartAudioOffset": {
										"type": "number"
									},
									"Duration": {
										"type": "number"
									},
									"PhraseId": {
										"type": "string"
									},
									"Language": {
										"type": "string"
									},
									"ChannelId": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/InsightsDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/InsightsDataLake')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('InsightsDataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('InsightsDataLake_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pfpostcallreference0sws0-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('pfpostcallreference0sws0-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pfpostcallreference0sws0-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('pfpostcallreference0sws0-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pfpostcallreference0sypasepool0')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('pfpostcallreference0sypasepool0_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/postcallreference0pbi0')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "2b22a99c-27bf-4d76-8a06-3e6c0b4e4cc2",
					"tenantID": "72f988bf-86f1-41af-91ab-2d7cd011db47"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/InsightsFlow')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "InsightsDataLake",
								"type": "LinkedServiceReference"
							},
							"name": "InsightsSource"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "pfpostcallreference0sypasepool0",
								"type": "LinkedServiceReference"
							},
							"name": "InsightsSink"
						},
						{
							"linkedService": {
								"referenceName": "pfpostcallreference0sypasepool0",
								"type": "LinkedServiceReference"
							},
							"name": "TranscriptSink"
						},
						{
							"linkedService": {
								"referenceName": "pfpostcallreference0sypasepool0",
								"type": "LinkedServiceReference"
							},
							"name": "ReasonsSink"
						}
					],
					"transformations": [
						{
							"name": "ItemsFlatten"
						},
						{
							"name": "InsightsSelect"
						},
						{
							"name": "ReasonsSelect"
						},
						{
							"name": "TranscriptSelect"
						},
						{
							"name": "InsightsChannelDerive"
						},
						{
							"name": "TranscriptFlatten"
						},
						{
							"name": "ReasonsFlatten"
						},
						{
							"name": "TranscriptChannelDerive"
						},
						{
							"name": "ReasonsChannelDerive"
						}
					],
					"script": "source(output(\n\t\tItems as (ChannelId as boolean, Confidence as double, DisplayText as string, Duration as double, HotPhrase as string, InsightId as string, Language as string, MatchLength as short, MatchStartIdx as short, MatchedText as string, PhraseId as string, Reasons as (CallReasonSpan as (Channel as boolean, Display as string, Duration as integer, ITN as string, Lexical as string, MaskedITN as string, Offset as integer, PhraseId as string)[], StartOffset as short)[], SentimentScore as double, StartAudioOffset as double, Type as string, transcript as (Channel as boolean, Display as string, Duration as integer, ITN as string, Lexical as string, MaskedITN as string, Offset as integer, PhraseId as string, RedactedAudioSpans as (Duration as short, StartOffset as integer)[], RedactedDisplaySpans as (Length as short, StartIndex as short)[], RedactedITNSpans as (Length as short, StartIndex as short)[], RedactedLexicalSpans as (Length as short, StartIndex as short)[], RedactedMaskedITNSpans as (Length as short, StartIndex as short)[])[])[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'FileName',\n\tformat: 'json',\n\tfileSystem: 'pfinsights',\n\tdocumentForm: 'arrayOfDocuments') ~> InsightsSource\nInsightsSource foldDown(unroll(Items),\n\tmapColumn(\n\t\tChannelId = Items.ChannelId,\n\t\tConfidence = Items.Confidence,\n\t\tDisplayText = Items.DisplayText,\n\t\tDuration = Items.Duration,\n\t\tHotPhrase = Items.HotPhrase,\n\t\tInsightId = Items.InsightId,\n\t\tLanguage = Items.Language,\n\t\tMatchLength = Items.MatchLength,\n\t\tMatchStartIdx = Items.MatchStartIdx,\n\t\tMatchedText = Items.MatchedText,\n\t\tPhraseId = Items.PhraseId,\n\t\tReasons = Items.Reasons,\n\t\tSentimentScore = Items.SentimentScore,\n\t\tStartAudioOffset = Items.StartAudioOffset,\n\t\tType = Items.Type,\n\t\ttranscript = Items.transcript,\n\t\tFileName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ItemsFlatten\nItemsFlatten select(mapColumn(\n\t\tChannelId,\n\t\tConfidence,\n\t\tDisplayText,\n\t\tDuration,\n\t\tHotPhrase,\n\t\tInsightId,\n\t\tLanguage,\n\t\tMatchLength,\n\t\tMatchStartIdx,\n\t\tMatchedText,\n\t\tPhraseId,\n\t\tSentimentScore,\n\t\tStartAudioOffset,\n\t\tType,\n\t\tFileName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InsightsSelect\nItemsFlatten select(mapColumn(\n\t\tFileName,\n\t\tReasons\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReasonsSelect\nItemsFlatten select(mapColumn(\n\t\ttranscript,\n\t\tFileName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TranscriptSelect\nInsightsSelect derive(ChannelId = iif(ChannelId, \"Customer\", \"Agent\")) ~> InsightsChannelDerive\nTranscriptSelect foldDown(unroll(transcript),\n\tmapColumn(\n\t\tChannel = transcript.Channel,\n\t\tDisplay = transcript.Display,\n\t\tDuration = transcript.Duration,\n\t\tITN = transcript.ITN,\n\t\tLexical = transcript.Lexical,\n\t\tMaskedITN = transcript.MaskedITN,\n\t\tOffset = transcript.Offset,\n\t\tPhraseId = transcript.PhraseId,\n\t\tFileName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> TranscriptFlatten\nReasonsSelect foldDown(unroll(Reasons.CallReasonSpan),\n\tmapColumn(\n\t\tChannel = Reasons.CallReasonSpan.Channel,\n\t\tDisplay = Reasons.CallReasonSpan.Display,\n\t\tDuration = Reasons.CallReasonSpan.Duration,\n\t\tITN = Reasons.CallReasonSpan.ITN,\n\t\tLexical = Reasons.CallReasonSpan.Lexical,\n\t\tMaskedITN = Reasons.CallReasonSpan.MaskedITN,\n\t\tOffset = Reasons.CallReasonSpan.Offset,\n\t\tPhraseId = Reasons.CallReasonSpan.PhraseId,\n\t\tStartOffset = Reasons.StartOffset,\n\t\tFileName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ReasonsFlatten\nTranscriptFlatten derive(Channel = iif(Channel, \"Customer\", \"Agent\")) ~> TranscriptChannelDerive\nReasonsFlatten derive(Channel = iif(Channel, \"Customer\", \"Agent\")) ~> ReasonsChannelDerive\nInsightsChannelDerive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'synapseanalytics',\n\tschemaName: 'dbo',\n\ttableName: 'insights',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InsightsSink\nTranscriptChannelDerive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'synapseanalytics',\n\tschemaName: 'dbo',\n\ttableName: 'transcript',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TranscriptSink\nReasonsChannelDerive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'synapseanalytics',\n\tschemaName: 'dbo',\n\ttableName: 'reasons',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReasonsSink"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/InsightsDataLake')]",
				"[concat(variables('workspaceId'), '/linkedServices/pfpostcallreference0sypasepool0')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Call Duration Notebook')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 0,
				"nbformat_minor": 0,
				"bigDataPool": {
					"referenceName": "postcall0spark0",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/4a49a7f9-5e11-4cda-83e2-badfc3f2db28/resourceGroups/pfpostcallreference0rg0/providers/Microsoft.Synapse/workspaces/pfpostcallreference0sws0/bigDataPools/postcall0spark0",
						"name": "postcall0spark0",
						"type": "Spark",
						"endpoint": "https://pfpostcallreference0sws0.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/postcall0spark0",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 8,
						"memory": 56,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"val sql_pool = \"pfpostcallreference0sqlp0\"\n",
							"val df = spark.read.sqlanalytics(\"%s.dbo.transcript\".format(sql_pool)) \n",
							"df.createOrReplaceTempView( \"transcript\" )"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": true
						},
						"source": [
							"%%pyspark\r\n",
							"# Calculate call duration using transcript information\r\n",
							"\r\n",
							"# Get 'transcripts dataframe'\r\n",
							"df = spark.sql(\"SELECT FileName, Offset, Duration FROM transcript\")\r\n",
							"\r\n",
							"# Get highest 'Offset' for given 'FileName'\r\n",
							"df_max_offset = df.select(\"*\").distinct().groupBy(\"FileName\").max(\"Offset\")\r\n",
							"\r\n",
							"# Get last 'Offset' and 'Duration' for a given 'FileName'\r\n",
							"df_end_offset = df.join(df_max_offset, [\"FileName\"]) \\\r\n",
							"                    .where(df[\"Offset\"] == df_max_offset[\"max(Offset)\"]) \\\r\n",
							"                    .where(df[\"FileName\"] == df_max_offset[\"FileName\"]) \\\r\n",
							"                    .drop(\"max(Offset)\")\r\n",
							"\r\n",
							"# Caculate 'EndOffset' for each 'FileName'\r\n",
							"df_end_offset = df_end_offset.withColumn(\"callDurationTime\", (df_end_offset[\"Offset\"] + df_end_offset[\"Duration\"]) / 1000.0).distinct()\r\n",
							"\r\n",
							"# Create temp View of dataframe results\r\n",
							"df_end_offset.createOrReplaceTempView(\"callDuration\")\r\n",
							"df_end_offset.show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "scala"
							},
							"collapsed": true
						},
						"source": [
							"%%spark\r\n",
							"val scala_df = spark.sqlContext.sql(\"select * from callDuration\")\r\n",
							"scala_df.write.sqlanalytics(\"%s.dbo.callDuration\".format(sql_pool), Constants.INTERNAL)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pfpostcallreference0sqlp0')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		}
	]
}